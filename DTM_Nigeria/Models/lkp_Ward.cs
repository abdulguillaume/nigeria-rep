//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace DTM_Nigeria.Models
{
    public partial class lkp_Ward
    {
        #region Primitive Properties
    
        public virtual int id
        {
            get;
            set;
        }
    
        public virtual string lga_code
        {
            get { return _lga_code; }
            set
            {
                if (_lga_code != value)
                {
                    if (lkp_Lga != null && lkp_Lga.lga_code != value)
                    {
                        lkp_Lga = null;
                    }
                    _lga_code = value;
                }
            }
        }
        private string _lga_code;
    
        public virtual string ward_name
        {
            get;
            set;
        }
    
        public virtual string ward_code
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<iom_ga_idp_population> iom_ga_idp_population
        {
            get
            {
                if (_iom_ga_idp_population == null)
                {
                    var newCollection = new FixupCollection<iom_ga_idp_population>();
                    newCollection.CollectionChanged += Fixupiom_ga_idp_population;
                    _iom_ga_idp_population = newCollection;
                }
                return _iom_ga_idp_population;
            }
            set
            {
                if (!ReferenceEquals(_iom_ga_idp_population, value))
                {
                    var previousValue = _iom_ga_idp_population as FixupCollection<iom_ga_idp_population>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_ga_idp_population;
                    }
                    _iom_ga_idp_population = value;
                    var newValue = value as FixupCollection<iom_ga_idp_population>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_ga_idp_population;
                    }
                }
            }
        }
        private ICollection<iom_ga_idp_population> _iom_ga_idp_population;
    
        public virtual ICollection<iom_group_assessment_2> iom_group_assessment_2
        {
            get
            {
                if (_iom_group_assessment_2 == null)
                {
                    var newCollection = new FixupCollection<iom_group_assessment_2>();
                    newCollection.CollectionChanged += Fixupiom_group_assessment_2;
                    _iom_group_assessment_2 = newCollection;
                }
                return _iom_group_assessment_2;
            }
            set
            {
                if (!ReferenceEquals(_iom_group_assessment_2, value))
                {
                    var previousValue = _iom_group_assessment_2 as FixupCollection<iom_group_assessment_2>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_group_assessment_2;
                    }
                    _iom_group_assessment_2 = value;
                    var newValue = value as FixupCollection<iom_group_assessment_2>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_group_assessment_2;
                    }
                }
            }
        }
        private ICollection<iom_group_assessment_2> _iom_group_assessment_2;
    
        public virtual ICollection<iom_presence_wards> iom_presence_wards
        {
            get
            {
                if (_iom_presence_wards == null)
                {
                    var newCollection = new FixupCollection<iom_presence_wards>();
                    newCollection.CollectionChanged += Fixupiom_presence_wards;
                    _iom_presence_wards = newCollection;
                }
                return _iom_presence_wards;
            }
            set
            {
                if (!ReferenceEquals(_iom_presence_wards, value))
                {
                    var previousValue = _iom_presence_wards as FixupCollection<iom_presence_wards>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_presence_wards;
                    }
                    _iom_presence_wards = value;
                    var newValue = value as FixupCollection<iom_presence_wards>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_presence_wards;
                    }
                }
            }
        }
        private ICollection<iom_presence_wards> _iom_presence_wards;
    
        public virtual lkp_Lga lkp_Lga
        {
            get { return _lkp_Lga; }
            set
            {
                if (!ReferenceEquals(_lkp_Lga, value))
                {
                    var previousValue = _lkp_Lga;
                    _lkp_Lga = value;
                    Fixuplkp_Lga(previousValue);
                }
            }
        }
        private lkp_Lga _lkp_Lga;
    
        public virtual ICollection<iom_ward_profile> iom_ward_profile
        {
            get
            {
                if (_iom_ward_profile == null)
                {
                    var newCollection = new FixupCollection<iom_ward_profile>();
                    newCollection.CollectionChanged += Fixupiom_ward_profile;
                    _iom_ward_profile = newCollection;
                }
                return _iom_ward_profile;
            }
            set
            {
                if (!ReferenceEquals(_iom_ward_profile, value))
                {
                    var previousValue = _iom_ward_profile as FixupCollection<iom_ward_profile>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_ward_profile;
                    }
                    _iom_ward_profile = value;
                    var newValue = value as FixupCollection<iom_ward_profile>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_ward_profile;
                    }
                }
            }
        }
        private ICollection<iom_ward_profile> _iom_ward_profile;
    
        public virtual ICollection<iom_ward_profile> iom_ward_profile1
        {
            get
            {
                if (_iom_ward_profile1 == null)
                {
                    var newCollection = new FixupCollection<iom_ward_profile>();
                    newCollection.CollectionChanged += Fixupiom_ward_profile1;
                    _iom_ward_profile1 = newCollection;
                }
                return _iom_ward_profile1;
            }
            set
            {
                if (!ReferenceEquals(_iom_ward_profile1, value))
                {
                    var previousValue = _iom_ward_profile1 as FixupCollection<iom_ward_profile>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_ward_profile1;
                    }
                    _iom_ward_profile1 = value;
                    var newValue = value as FixupCollection<iom_ward_profile>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_ward_profile1;
                    }
                }
            }
        }
        private ICollection<iom_ward_profile> _iom_ward_profile1;
    
        public virtual ICollection<iom_ward_profile> iom_ward_profile2
        {
            get
            {
                if (_iom_ward_profile2 == null)
                {
                    var newCollection = new FixupCollection<iom_ward_profile>();
                    newCollection.CollectionChanged += Fixupiom_ward_profile2;
                    _iom_ward_profile2 = newCollection;
                }
                return _iom_ward_profile2;
            }
            set
            {
                if (!ReferenceEquals(_iom_ward_profile2, value))
                {
                    var previousValue = _iom_ward_profile2 as FixupCollection<iom_ward_profile>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_ward_profile2;
                    }
                    _iom_ward_profile2 = value;
                    var newValue = value as FixupCollection<iom_ward_profile>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_ward_profile2;
                    }
                }
            }
        }
        private ICollection<iom_ward_profile> _iom_ward_profile2;

        #endregion
        #region Association Fixup
    
        private void Fixuplkp_Lga(lkp_Lga previousValue)
        {
            if (previousValue != null && previousValue.lkp_Ward.Contains(this))
            {
                previousValue.lkp_Ward.Remove(this);
            }
    
            if (lkp_Lga != null)
            {
                if (!lkp_Lga.lkp_Ward.Contains(this))
                {
                    lkp_Lga.lkp_Ward.Add(this);
                }
                if (lga_code != lkp_Lga.lga_code)
                {
                    lga_code = lkp_Lga.lga_code;
                }
            }
        }
    
        private void Fixupiom_ga_idp_population(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_ga_idp_population item in e.NewItems)
                {
                    item.lkp_Ward = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_ga_idp_population item in e.OldItems)
                {
                    if (ReferenceEquals(item.lkp_Ward, this))
                    {
                        item.lkp_Ward = null;
                    }
                }
            }
        }
    
        private void Fixupiom_group_assessment_2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_group_assessment_2 item in e.NewItems)
                {
                    item.lkp_Ward = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_group_assessment_2 item in e.OldItems)
                {
                    if (ReferenceEquals(item.lkp_Ward, this))
                    {
                        item.lkp_Ward = null;
                    }
                }
            }
        }
    
        private void Fixupiom_presence_wards(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_presence_wards item in e.NewItems)
                {
                    item.lkp_Ward = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_presence_wards item in e.OldItems)
                {
                    if (ReferenceEquals(item.lkp_Ward, this))
                    {
                        item.lkp_Ward = null;
                    }
                }
            }
        }
    
        private void Fixupiom_ward_profile(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_ward_profile item in e.NewItems)
                {
                    item.lkp_Ward = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_ward_profile item in e.OldItems)
                {
                    if (ReferenceEquals(item.lkp_Ward, this))
                    {
                        item.lkp_Ward = null;
                    }
                }
            }
        }
    
        private void Fixupiom_ward_profile1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_ward_profile item in e.NewItems)
                {
                    item.lkp_Ward1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_ward_profile item in e.OldItems)
                {
                    if (ReferenceEquals(item.lkp_Ward1, this))
                    {
                        item.lkp_Ward1 = null;
                    }
                }
            }
        }
    
        private void Fixupiom_ward_profile2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_ward_profile item in e.NewItems)
                {
                    item.lkp_Ward2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_ward_profile item in e.OldItems)
                {
                    if (ReferenceEquals(item.lkp_Ward2, this))
                    {
                        item.lkp_Ward2 = null;
                    }
                }
            }
        }

        #endregion
    }
}
