@model DTM_Nigeria.Models.B3F

@{
    ViewBag.Title = "Edit GA 1/4";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Group Assessment</h2>
<h3>@ViewBag.WardInfo</h3>

@if (ViewBag.Exception != null)
{
    <p style="color: Red">@ViewBag.Exception</p>
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="../../Scripts/MyCustomValidation.js" type="text/javascript"></script>

<link href="../../Content/jquery-ui.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>

<script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-ui-1.10.4.custom.min.js" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {

//        $("#state").change(function () {
//            //alert($("#state").val());
//            if ($("#state").val() != "") {
//                $("#state").removeClass("input-validation-error");
//                $("#state-error").hide();
//            }
//        });

//        $("#forma").submit(function () {

//            if ($("#state").val() == "") {
//                $("#state").addClass("input-validation-error");
//                $("#state-error").show();
//            }

//        });

        $(".edit-date").datepicker();

        $("#forma").on("keyup change", "[class^=kline_], [class^=pline-]", function (e) {

            var trid = $(this).closest('tr').attr('id');

            if ($(this).val() != '') {

                $('.cb_' + trid).prop('checked', true);

               // alert('.cb_' + trid);
            }

        });

        $('[class^=cb_]').click(function (e) {
            if (!$(this).is(':checked')) {
                //                $('input[name="totalCost"]').val(10);
                var trid = $(this).closest('tr').attr('id');

                $('#' + trid).find('input[type=text], select').each(function () {
                    $(this).val('');
                });

                $('.cb_' + trid).prop('checked', false);
            }
        });


        $("#researcher_researcher_name").autocomplete({
            source: '@Url.Action("GetResearchersNames")',
            focus: function (event, ui) {

                $("#researcher_researcher_name").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {

                $.ajax({
                    url: "/B3F/GetResearcherTels",
                    type: 'POST',
                    data: { r_name: ui.item.label },
                    success: function (reseacher) {
                        var $telTxtBox = $('#researcher_researcher_tel');
                        $telTxtBox.empty();
                        $telTxtBox.val(reseacher.toString());
                    },
                    error: function (xhr) { alert("error!!"); }
                });

            }
        }
        );

        var trid = null; // $("[class^=kline_1]").closest('tr').attr('id');

        $("[class^=kline_1]").autocomplete({
            //            source: '@Url.Action("GetInfsNames","B3F")'
            //        });
            source: '@Url.Action("GetInfsNames")',
            focus: function (event, ui) {

                trid = $(this).closest('tr').attr('id');

                trid = trid - 4;

                return false;
            },
            select: function (event, ui) {

                $.ajax({
                    url: "/B3F/GetInfInfo",
                    type: 'POST',
                    data: { i_name: ui.item.label },
                    //                    dataType: "json",
                    //                    type: "POST",
                    success: function (response, textStatus, jqXHR) {

                        $("#informant_" + trid + "__sex").val(response.sex);
                        $("#informant_" + trid + "__details").val(response.desc);
                        $("#informant_" + trid + "__type").val(response.type);

                    },
                    error: function (xhr) { alert("error!!"); }
                });

            }
        }
                );

    });
</script>

@using (//Html.BeginForm()
    Html.BeginForm("Edit", "B3F", FormMethod.Post, new { id = "forma" })
    ) {
    @Html.ValidationSummary(true)

List<SelectListItem> sex = new List<SelectListItem>();

sex.Add(new SelectListItem { Text = "M - Male", Value = "M" });
sex.Add(new SelectListItem { Text = "F - Female", Value = "F" });
sex.Add(new SelectListItem { Text = "x - N/A", Value = "x" });

    <fieldset>
        <legend>DTM - Group Assessment (Page 1/4)</legend>

        <table width=100%>
        
        <tr>
        <th>Group ID</th><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.group_id)
                @Html.ValidationMessageFor(model => model.ga_p1.group_id)
            </div>
        </td><th>LGA</th><td>@ViewBag.LGA</td>
        </tr>

        <tr>
        <th>Ward</th><td>@ViewBag.Ward</td><th>Location</th><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.location)
                @Html.ValidationMessageFor(model => model.ga_p1.location)
            </div>        
        </td>
        </tr>
        
        <tr>
        <th>Logitude</th><td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ga_p1.coord_lon)
                @Html.ValidationMessageFor(model => model.ga_p1.coord_lon)
            </div> 
        </td><th>Latitude</th><td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ga_p1.coord_lat)
                @Html.ValidationMessageFor(model => model.ga_p1.coord_lat)
            </div> 
        </td>
        </tr>

        <tr>
        <th>Interview date</th><td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ga_p1.interview_date, new { @class = "edit-date" })
                @Html.ValidationMessageFor(model => model.ga_p1.interview_date)
            </div> 
        </td><th>Researcher name & phone</th><td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.researcher.researcher_name, new { placeholder = "Name" })
                @Html.ValidationMessageFor(model => model.researcher.researcher_name)
            </div> 
            <div class="editor-field">
                @Html.TextBoxFor(model => model.researcher.researcher_tel, new { placeholder = "Telephone" })
                @Html.ValidationMessageFor(model => model.researcher.researcher_tel)
            </div> 
        
        </td>
        </tr>

        <tr>
        <th>Shelter type</th><td>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.ga_p1.shelter_type, (SelectList)ViewBag.Shelter, "[Select type]")
                @Html.ValidationMessageFor(model => model.ga_p1.shelter_type)
            </div> 
        </td><th>if other, specify</th><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.sheter_type_other)
                @Html.ValidationMessageFor(model => model.ga_p1.sheter_type_other)
            </div> 
        </td>
        </tr>

        <tr>
        <th>State of Origin</th><td>

            <div class="editor-field">
                @Html.DropDownListFor(model => model.ga_p1.state, (SelectList)ViewBag.StatesList, "[Select state]", new { @id = "state" })
                @Html.ValidationMessageFor(model => model.ga_p1.state)
           </div>


        </td><th rowspan=2>Reason for displacement</th><td>
            <div class="editor-field">
                 @Html.DropDownListFor(model => model.ga_p1.reason_for_disp, (SelectList)ViewBag.ReasonOfDisp, "[Select reason]")
                @Html.ValidationMessageFor(model => model.ga_p1.reason_for_disp)
            </div> 

            
        </td>
        </tr>
        
        
        <tr>
        <th>LGA of Origin</th> <td> 
        
            <div class="editor-field">
                @Html.DropDownListFor(model => model.ga_p1.lga_orgin, (SelectList)ViewBag.LgaList, "[Select lga]")
                @Html.ValidationMessageFor(model => model.ga_p1.lga_orgin)
            </div> 

         </td> <td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ga_p1.reason_other, new { placeholder = "if 4-Other, Specify reason" })
                @Html.ValidationMessageFor(model => model.ga_p1.reason_other)
            </div> 
        </td>
        </tr>

        <tr>
        <th colspan=2>Number of households and individuals</th><td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ga_p1.number_hh, new { placeholder = "# HH" })
                @Html.ValidationMessageFor(model => model.ga_p1.number_hh)
            </div> 
        </td><td>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ga_p1.number_ind, new { placeholder = "# IND" })
                @Html.ValidationMessageFor(model => model.ga_p1.number_ind)
            </div> 
        </td>
        </tr>
        </table>
        <br />

        1.Group details
        <table width=100% class='table'>
        <tr>
        <th colspan=2>Waive of displacement</th><td>
            <div class="editor-field">
                @*@foreach(var p in (SelectList)ViewBag.Periods)
                {
                    if (p.Value.Equals(@Model.ga_p1.wave_of_disp))
                    {
                        @: @p.Text
                        break;
                    }
                }*@
                @Html.DropDownListFor(model => model.ga_p1.wave_of_disp, (SelectList)ViewBag.Periods, "[Select period]")
                @Html.ValidationMessageFor(model => model.ga_p1.wave_of_disp)
            </div> 
        </td>
        <th>If others, specify</th><td colspan=3>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.wave_if_other)
                @Html.ValidationMessageFor(model => model.ga_p1.wave_if_other)
            </div>
        </td>
  @*      <td>**</td>*@
        </tr>
        <tr><th></th>
        <th>1.2 Ward of Origin</th><th>1.3 # Households</th><th>1.4 # Individuals</th><th>1.5 Ethnicity</th><th>1.6 Religion</th><th>(1.5+) Ethnicity, if other</th>
        </tr>

        @for (int i = 0; i < 4; i++) { 
            <tr id='@i'>
                <td>
                    @Html.HiddenFor(model=>model.ga_idp_pop[i].id)
                    <div class="editor-field">
                        @Html.CheckBoxFor(model => model.ga_idp_pop[i].notEmpty, new { @class = "cb_" + @i })
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ga_idp_pop[i].ward_orig, new SelectList((SelectList)ViewBag.WardList,"Value","Text",Model.ga_idp_pop[i].ward_orig), "[Select ward]", new { @class = "pline-"+@i, })
                        @*@Html.TextBoxFor(model => model.ga_idp_pop[i].ward_orig, new { @class = "pline-" + @i })*@
                        @Html.ValidationMessageFor(model => model.ga_idp_pop[i].ward_orig)
                    </div>
                </td><td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ga_idp_pop[i].hh, new { @class = "pline-" + @i })
                        @Html.ValidationMessageFor(model => model.ga_idp_pop[i].hh)
                    </div>
                </td><td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ga_idp_pop[i].ind, new { @class = "pline-" + @i })
                        @Html.ValidationMessageFor(model => model.ga_idp_pop[i].ind)
                    </div>
                </td><td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ga_idp_pop[i].ethnicity, new SelectList((SelectList)ViewBag.Ethnicity, "Value","Text",Model.ga_idp_pop[i].ethnicity), "[Select ethinicity]", new { @class = "pline-" + @i })
                        @Html.ValidationMessageFor(model => model.ga_idp_pop[i].ethnicity)
                    </div>
                </td><td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ga_idp_pop[i].religion, new SelectList((SelectList)ViewBag.Religion,"Value","Text",Model.ga_idp_pop[i].religion), "[Select religion]", new { @class = "pline-" + @i })
                        @Html.ValidationMessageFor(model => model.ga_idp_pop[i].religion)
                    </div>
                </td><td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ga_idp_pop[i].religion_other, new { @class = "pline-" + @i })
                        @Html.ValidationMessageFor(model => model.ga_idp_pop[i].religion_other)
                    </div>
                </td>
            </tr>
        
        }


        </table>

        <br />
        <table width=100%>
        <tr>
        <th>1.7 Age/gender breakdow</th><th>less than 1</th><th>1-5</th><th>6-17</th><th>18-59</th><th>60+</th>
        </tr>
        <tr>
        <th>Males</th><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.m0_5)
                @Html.ValidationMessageFor(model => model.ga_p1.m0_5)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.m5_14)
                @Html.ValidationMessageFor(model => model.ga_p1.m5_14)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.m15_24)
                @Html.ValidationMessageFor(model => model.ga_p1.m15_24)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.m25_59)
                @Html.ValidationMessageFor(model => model.ga_p1.m25_59)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.m60p)
                @Html.ValidationMessageFor(model => model.ga_p1.m60p)
            </div>
        </td>
        </tr>
        <tr>
        <th>Females</th><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.f0_5)
                @Html.ValidationMessageFor(model => model.ga_p1.f0_5)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.f5_14)
                @Html.ValidationMessageFor(model => model.ga_p1.f5_14)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.f15_24)
                @Html.ValidationMessageFor(model => model.ga_p1.f15_24)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.f25_59)
                @Html.ValidationMessageFor(model => model.ga_p1.f25_59)
            </div>
        </td><td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.f60p)
                @Html.ValidationMessageFor(model => model.ga_p1.f60p)
            </div>
        </td>
        </tr>
        </table>
        <br />

        <table width=100% class='table'>
        <tr>
        <th colspan=4> 1.8 What sources of information were consulted in conducting this Group / Family assessment? (Name and Type)</th><td></td>
        </tr>
        <tr><th></th>
        <th>Key informant name</th><th>key informant sex (M/F)</th><th>key informant number</th><th>key informant type</th>
        </tr>

        @for (int i = 0; i < 3; i++)
        {
            int j = 4 + i;
            <tr id='@j'>
                <td>
                        
                    <div class="editor-field">
                        @Html.CheckBoxFor(model => model.informant[i].notEmpty, new { @class = "cb_" + @j  })
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.informant[i].name, new { @class = "kline_1-" + @i })
                        @Html.ValidationMessageFor(model => model.informant[i].name)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.informant[i].sex, new SelectList(sex, "Value", "Text", Model.informant[i].sex), "[Select sex]", new { @class = "kline_2-" + @i })
                        @Html.ValidationMessageFor(model => model.informant[i].sex)
                    </div>
                </td>
                <td>
                    <div class="editor-field">  
                        @Html.EditorFor(model => model.informant[i].details, new { @class = "kline_3-" + @i })
                        @Html.ValidationMessageFor(model => model.informant[i].details)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.informant[i].type, new SelectList((SelectList)ViewBag.Informant, "Value", "Text", Model.informant[i].type), "[Select type]", new { @class = "kline_4-" + @i })
                        @Html.ValidationMessageFor(model => model.informant[i].type)
                    </div>
                </td>
            </tr>
        }

        </table>

        <br />

        <table width=100%>
        <tr>
        <th>1.9 Credibility rating *</th> <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ga_p1.credibility_rating)
                @Html.ValidationMessageFor(model => model.ga_p1.credibility_rating)
            </div>
        </td>
        </tr>
        </table>
        <br />

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">
    $(function () {
        $("#state").change(function () {

            if ($(this).val() != "NULL") {

                $.ajax({
                    url: "/B3F/getLgaList",
                    type: 'POST',
                    data: { id: $(this).val() },
                    success: function (lgas) {

                        var $select = $('#ga_p1_lga_orgin');
                        $select.empty();
                        $select.append("<option value=''>[Select Lga]</option>");
                        $.each(lgas, function (i, lga) {
                            $select.append("<option value='" + lga.Value + "'>" + lga.Text + "</option>");
                        });
                    },
                    error: function (xhr) { alert("error!!"); }
                });
            }
        });



        $("#ga_p1_lga_orgin").change(function () {

            if ($(this).val() != "NULL") {

                $.ajax({
                    url: "/B3F/getWardList",
                    type: 'POST',
                    data: { id: $(this).val() },
                    success: function (wards) {

                        for (var k = 0; k < 4; k++) {

                            var $select = $('#ga_idp_pop_' + k + '__ward_orig');
                            $select.empty();
                            $select.append("<option value=''>[Select Ward]</option>");
                            $.each(wards, function (i, ward) {
                                $select.append("<option value='" + ward.Value + "'>" + ward.Text + "</option>");
                            });
                        }
                    },
                    error: function (xhr) { alert("error!!"); }
                });
            }
        });


    });
</script>