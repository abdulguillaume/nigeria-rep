//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace DTM_Nigeria.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(iom_b2f_informants))]
    [KnownType(typeof(iom_b2f_organizations_assisting))]
    [KnownType(typeof(iom_presence_wards))]
    [KnownType(typeof(iom_researchers))]
    [KnownType(typeof(iom_ward_households_breakdown))]
    [KnownType(typeof(iom_ward_idp_arrival))]
    [KnownType(typeof(iom_ward_presence_per_location))]
    [KnownType(typeof(lkp_NotReturnLocation))]
    [KnownType(typeof(lkp_Period2))]
    [KnownType(typeof(lkp_Settlement))]
    [KnownType(typeof(lkp_State))]
    [KnownType(typeof(iom_group_assessment_1))]
    public partial class iom_ward_profile
    {
        #region Primitive Properties
        [DataMember]
        public virtual int id
        {
            get { return _id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_id != value)
                    {
                        if (iom_presence_wards != null && iom_presence_wards.id != value)
                        {
                            iom_presence_wards = null;
                        }
                        _id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _id;
        [DataMember]
        public virtual string date
        {
            get;
            set;
        }
        [DataMember]
        public virtual int researcher_id
        {
            get { return _researcher_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_researcher_id != value)
                    {
                        if (iom_researchers != null && iom_researchers.id != value)
                        {
                            iom_researchers = null;
                        }
                        _researcher_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _researcher_id;
        [DataMember]
        public virtual string settlement
        {
            get;
            set;
        }
        [DataMember]
        public virtual string settlement_type
        {
            get { return _settlement_type; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_settlement_type != value)
                    {
                        if (lkp_Settlement != null && lkp_Settlement.id != value)
                        {
                            lkp_Settlement = null;
                        }
                        _settlement_type = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _settlement_type;
        [DataMember]
        public virtual int displaced_hh_ind_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> number_hh
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> number_ind
        {
            get;
            set;
        }
        [DataMember]
        public virtual int nr_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual string nr_location
        {
            get { return _nr_location; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_nr_location != value)
                    {
                        if (lkp_NotReturnLocation != null && lkp_NotReturnLocation.id != value)
                        {
                            lkp_NotReturnLocation = null;
                        }
                        _nr_location = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _nr_location;
        [DataMember]
        public virtual string nr_state1
        {
            get { return _nr_state1; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_nr_state1 != value)
                    {
                        if (lkp_State != null && lkp_State.state_code != value)
                        {
                            lkp_State = null;
                        }
                        _nr_state1 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _nr_state1;
        [DataMember]
        public virtual string nr_state2
        {
            get { return _nr_state2; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_nr_state2 != value)
                    {
                        if (lkp_State1 != null && lkp_State1.state_code != value)
                        {
                            lkp_State1 = null;
                        }
                        _nr_state2 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _nr_state2;
        [DataMember]
        public virtual Nullable<int> nr_period
        {
            get { return _nr_period; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_nr_period != value)
                    {
                        if (lkp_Period2 != null && lkp_Period2.id != value)
                        {
                            lkp_Period2 = null;
                        }
                        _nr_period = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _nr_period;
        [DataMember]
        public virtual int reason_insurgency_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_insurg_year
        {
            get { return _reason_insurg_year; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_reason_insurg_year != value)
                    {
                        if (lkp_Period21 != null && lkp_Period21.id != value)
                        {
                            lkp_Period21 = null;
                        }
                        _reason_insurg_year = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _reason_insurg_year;
        [DataMember]
        public virtual Nullable<int> reason_insurg_hh
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_insurg_ind
        {
            get;
            set;
        }
        [DataMember]
        public virtual int reason_clash_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_clash_year
        {
            get { return _reason_clash_year; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_reason_clash_year != value)
                    {
                        if (lkp_Period22 != null && lkp_Period22.id != value)
                        {
                            lkp_Period22 = null;
                        }
                        _reason_clash_year = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _reason_clash_year;
        [DataMember]
        public virtual Nullable<int> reason_clash_hh
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_clash_ind
        {
            get;
            set;
        }
        [DataMember]
        public virtual int reason_disaster_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_disaster_year
        {
            get { return _reason_disaster_year; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_reason_disaster_year != value)
                    {
                        if (lkp_Period23 != null && lkp_Period23.id != value)
                        {
                            lkp_Period23 = null;
                        }
                        _reason_disaster_year = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _reason_disaster_year;
        [DataMember]
        public virtual Nullable<int> reason_disaster_hh
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_disaster_ind
        {
            get;
            set;
        }
        [DataMember]
        public virtual int reason_others_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual string reason_others_name
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_others_year
        {
            get { return _reason_others_year; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_reason_others_year != value)
                    {
                        if (lkp_Period24 != null && lkp_Period24.id != value)
                        {
                            lkp_Period24 = null;
                        }
                        _reason_others_year = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _reason_others_year;
        [DataMember]
        public virtual Nullable<int> reason_others_hh
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> reason_others_ind
        {
            get;
            set;
        }
        [DataMember]
        public virtual int temporary_settlement_type_camp_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> temporary_settlement_hh_camp
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> temporary_settlement_ind_camp
        {
            get;
            set;
        }
        [DataMember]
        public virtual int temporary_settlement_type_hc_YesNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> temporary_settlement_hh_hc
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> temporary_settlement_ind_hc
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> create_time
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> update_time
        {
            get;
            set;
        }
        [DataMember]
        public virtual string created_by
        {
            get;
            set;
        }
        [DataMember]
        public virtual string updated_by
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
        
    
        [DataMember]
        public virtual ICollection<iom_b2f_informants> iom_b2f_informants
        {
            get
            {
                if (_iom_b2f_informants == null)
                {
                    var newCollection = new FixupCollection<iom_b2f_informants>();
                    newCollection.CollectionChanged += Fixupiom_b2f_informants;
                    _iom_b2f_informants = newCollection;
                }
                return _iom_b2f_informants;
            }
            set
            {
                if (!ReferenceEquals(_iom_b2f_informants, value))
                {
                    var previousValue = _iom_b2f_informants as FixupCollection<iom_b2f_informants>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_b2f_informants;
                    }
                    _iom_b2f_informants = value;
                    var newValue = value as FixupCollection<iom_b2f_informants>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_b2f_informants;
                    }
                }
            }
        }
        private ICollection<iom_b2f_informants> _iom_b2f_informants;
        
    
        [DataMember]
        public virtual ICollection<iom_b2f_organizations_assisting> iom_b2f_organizations_assisting
        {
            get
            {
                if (_iom_b2f_organizations_assisting == null)
                {
                    var newCollection = new FixupCollection<iom_b2f_organizations_assisting>();
                    newCollection.CollectionChanged += Fixupiom_b2f_organizations_assisting;
                    _iom_b2f_organizations_assisting = newCollection;
                }
                return _iom_b2f_organizations_assisting;
            }
            set
            {
                if (!ReferenceEquals(_iom_b2f_organizations_assisting, value))
                {
                    var previousValue = _iom_b2f_organizations_assisting as FixupCollection<iom_b2f_organizations_assisting>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_b2f_organizations_assisting;
                    }
                    _iom_b2f_organizations_assisting = value;
                    var newValue = value as FixupCollection<iom_b2f_organizations_assisting>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_b2f_organizations_assisting;
                    }
                }
            }
        }
        private ICollection<iom_b2f_organizations_assisting> _iom_b2f_organizations_assisting;
        
    
        [DataMember]
        public virtual iom_presence_wards iom_presence_wards
        {
            get { return _iom_presence_wards; }
            set
            {
                if (!ReferenceEquals(_iom_presence_wards, value))
                {
                    var previousValue = _iom_presence_wards;
                    _iom_presence_wards = value;
                    Fixupiom_presence_wards(previousValue);
                }
            }
        }
        private iom_presence_wards _iom_presence_wards;
        
    
        [DataMember]
        public virtual iom_researchers iom_researchers
        {
            get { return _iom_researchers; }
            set
            {
                if (!ReferenceEquals(_iom_researchers, value))
                {
                    var previousValue = _iom_researchers;
                    _iom_researchers = value;
                    Fixupiom_researchers(previousValue);
                }
            }
        }
        private iom_researchers _iom_researchers;
        
    
        [DataMember]
        public virtual ICollection<iom_ward_households_breakdown> iom_ward_households_breakdown
        {
            get
            {
                if (_iom_ward_households_breakdown == null)
                {
                    var newCollection = new FixupCollection<iom_ward_households_breakdown>();
                    newCollection.CollectionChanged += Fixupiom_ward_households_breakdown;
                    _iom_ward_households_breakdown = newCollection;
                }
                return _iom_ward_households_breakdown;
            }
            set
            {
                if (!ReferenceEquals(_iom_ward_households_breakdown, value))
                {
                    var previousValue = _iom_ward_households_breakdown as FixupCollection<iom_ward_households_breakdown>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_ward_households_breakdown;
                    }
                    _iom_ward_households_breakdown = value;
                    var newValue = value as FixupCollection<iom_ward_households_breakdown>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_ward_households_breakdown;
                    }
                }
            }
        }
        private ICollection<iom_ward_households_breakdown> _iom_ward_households_breakdown;
        
    
        [DataMember]
        public virtual ICollection<iom_ward_idp_arrival> iom_ward_idp_arrival
        {
            get
            {
                if (_iom_ward_idp_arrival == null)
                {
                    var newCollection = new FixupCollection<iom_ward_idp_arrival>();
                    newCollection.CollectionChanged += Fixupiom_ward_idp_arrival;
                    _iom_ward_idp_arrival = newCollection;
                }
                return _iom_ward_idp_arrival;
            }
            set
            {
                if (!ReferenceEquals(_iom_ward_idp_arrival, value))
                {
                    var previousValue = _iom_ward_idp_arrival as FixupCollection<iom_ward_idp_arrival>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_ward_idp_arrival;
                    }
                    _iom_ward_idp_arrival = value;
                    var newValue = value as FixupCollection<iom_ward_idp_arrival>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_ward_idp_arrival;
                    }
                }
            }
        }
        private ICollection<iom_ward_idp_arrival> _iom_ward_idp_arrival;
        
    
        [DataMember]
        public virtual ICollection<iom_ward_presence_per_location> iom_ward_presence_per_location
        {
            get
            {
                if (_iom_ward_presence_per_location == null)
                {
                    var newCollection = new FixupCollection<iom_ward_presence_per_location>();
                    newCollection.CollectionChanged += Fixupiom_ward_presence_per_location;
                    _iom_ward_presence_per_location = newCollection;
                }
                return _iom_ward_presence_per_location;
            }
            set
            {
                if (!ReferenceEquals(_iom_ward_presence_per_location, value))
                {
                    var previousValue = _iom_ward_presence_per_location as FixupCollection<iom_ward_presence_per_location>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_ward_presence_per_location;
                    }
                    _iom_ward_presence_per_location = value;
                    var newValue = value as FixupCollection<iom_ward_presence_per_location>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_ward_presence_per_location;
                    }
                }
            }
        }
        private ICollection<iom_ward_presence_per_location> _iom_ward_presence_per_location;
        
    
        [DataMember]
        public virtual lkp_NotReturnLocation lkp_NotReturnLocation
        {
            get { return _lkp_NotReturnLocation; }
            set
            {
                if (!ReferenceEquals(_lkp_NotReturnLocation, value))
                {
                    var previousValue = _lkp_NotReturnLocation;
                    _lkp_NotReturnLocation = value;
                    Fixuplkp_NotReturnLocation(previousValue);
                }
            }
        }
        private lkp_NotReturnLocation _lkp_NotReturnLocation;
        
    
        [DataMember]
        public virtual lkp_Period2 lkp_Period2
        {
            get { return _lkp_Period2; }
            set
            {
                if (!ReferenceEquals(_lkp_Period2, value))
                {
                    var previousValue = _lkp_Period2;
                    _lkp_Period2 = value;
                    Fixuplkp_Period2(previousValue);
                }
            }
        }
        private lkp_Period2 _lkp_Period2;
        
    
        [DataMember]
        public virtual lkp_Period2 lkp_Period21
        {
            get { return _lkp_Period21; }
            set
            {
                if (!ReferenceEquals(_lkp_Period21, value))
                {
                    var previousValue = _lkp_Period21;
                    _lkp_Period21 = value;
                    Fixuplkp_Period21(previousValue);
                }
            }
        }
        private lkp_Period2 _lkp_Period21;
        
    
        [DataMember]
        public virtual lkp_Period2 lkp_Period22
        {
            get { return _lkp_Period22; }
            set
            {
                if (!ReferenceEquals(_lkp_Period22, value))
                {
                    var previousValue = _lkp_Period22;
                    _lkp_Period22 = value;
                    Fixuplkp_Period22(previousValue);
                }
            }
        }
        private lkp_Period2 _lkp_Period22;
        
    
        [DataMember]
        public virtual lkp_Period2 lkp_Period23
        {
            get { return _lkp_Period23; }
            set
            {
                if (!ReferenceEquals(_lkp_Period23, value))
                {
                    var previousValue = _lkp_Period23;
                    _lkp_Period23 = value;
                    Fixuplkp_Period23(previousValue);
                }
            }
        }
        private lkp_Period2 _lkp_Period23;
        
    
        [DataMember]
        public virtual lkp_Period2 lkp_Period24
        {
            get { return _lkp_Period24; }
            set
            {
                if (!ReferenceEquals(_lkp_Period24, value))
                {
                    var previousValue = _lkp_Period24;
                    _lkp_Period24 = value;
                    Fixuplkp_Period24(previousValue);
                }
            }
        }
        private lkp_Period2 _lkp_Period24;
        
    
        [DataMember]
        public virtual lkp_Settlement lkp_Settlement
        {
            get { return _lkp_Settlement; }
            set
            {
                if (!ReferenceEquals(_lkp_Settlement, value))
                {
                    var previousValue = _lkp_Settlement;
                    _lkp_Settlement = value;
                    Fixuplkp_Settlement(previousValue);
                }
            }
        }
        private lkp_Settlement _lkp_Settlement;
        
    
        [DataMember]
        public virtual lkp_State lkp_State
        {
            get { return _lkp_State; }
            set
            {
                if (!ReferenceEquals(_lkp_State, value))
                {
                    var previousValue = _lkp_State;
                    _lkp_State = value;
                    Fixuplkp_State(previousValue);
                }
            }
        }
        private lkp_State _lkp_State;
        
    
        [DataMember]
        public virtual lkp_State lkp_State1
        {
            get { return _lkp_State1; }
            set
            {
                if (!ReferenceEquals(_lkp_State1, value))
                {
                    var previousValue = _lkp_State1;
                    _lkp_State1 = value;
                    Fixuplkp_State1(previousValue);
                }
            }
        }
        private lkp_State _lkp_State1;
        
    
        [DataMember]
        public virtual ICollection<iom_group_assessment_1> iom_group_assessment_1
        {
            get
            {
                if (_iom_group_assessment_1 == null)
                {
                    var newCollection = new FixupCollection<iom_group_assessment_1>();
                    newCollection.CollectionChanged += Fixupiom_group_assessment_1;
                    _iom_group_assessment_1 = newCollection;
                }
                return _iom_group_assessment_1;
            }
            set
            {
                if (!ReferenceEquals(_iom_group_assessment_1, value))
                {
                    var previousValue = _iom_group_assessment_1 as FixupCollection<iom_group_assessment_1>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupiom_group_assessment_1;
                    }
                    _iom_group_assessment_1 = value;
                    var newValue = value as FixupCollection<iom_group_assessment_1>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupiom_group_assessment_1;
                    }
                }
            }
        }
        private ICollection<iom_group_assessment_1> _iom_group_assessment_1;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixupiom_presence_wards(iom_presence_wards previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.iom_ward_profile, this))
            {
                previousValue.iom_ward_profile = null;
            }
    
            if (iom_presence_wards != null)
            {
                iom_presence_wards.iom_ward_profile = this;
                if (id != iom_presence_wards.id)
                {
                    id = iom_presence_wards.id;
                }
            }
        }
    
        private void Fixupiom_researchers(iom_researchers previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile.Contains(this))
            {
                previousValue.iom_ward_profile.Remove(this);
            }
    
            if (iom_researchers != null)
            {
                if (!iom_researchers.iom_ward_profile.Contains(this))
                {
                    iom_researchers.iom_ward_profile.Add(this);
                }
                if (researcher_id != iom_researchers.id)
                {
                    researcher_id = iom_researchers.id;
                }
            }
        }
    
        private void Fixuplkp_NotReturnLocation(lkp_NotReturnLocation previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile.Contains(this))
            {
                previousValue.iom_ward_profile.Remove(this);
            }
    
            if (lkp_NotReturnLocation != null)
            {
                if (!lkp_NotReturnLocation.iom_ward_profile.Contains(this))
                {
                    lkp_NotReturnLocation.iom_ward_profile.Add(this);
                }
                if (nr_location != lkp_NotReturnLocation.id)
                {
                    nr_location = lkp_NotReturnLocation.id;
                }
            }
            else if (!_settingFK)
            {
                nr_location = null;
            }
        }
    
        private void Fixuplkp_Period2(lkp_Period2 previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile.Contains(this))
            {
                previousValue.iom_ward_profile.Remove(this);
            }
    
            if (lkp_Period2 != null)
            {
                if (!lkp_Period2.iom_ward_profile.Contains(this))
                {
                    lkp_Period2.iom_ward_profile.Add(this);
                }
                if (nr_period != lkp_Period2.id)
                {
                    nr_period = lkp_Period2.id;
                }
            }
            else if (!_settingFK)
            {
                nr_period = null;
            }
        }
    
        private void Fixuplkp_Period21(lkp_Period2 previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile1.Contains(this))
            {
                previousValue.iom_ward_profile1.Remove(this);
            }
    
            if (lkp_Period21 != null)
            {
                if (!lkp_Period21.iom_ward_profile1.Contains(this))
                {
                    lkp_Period21.iom_ward_profile1.Add(this);
                }
                if (reason_insurg_year != lkp_Period21.id)
                {
                    reason_insurg_year = lkp_Period21.id;
                }
            }
            else if (!_settingFK)
            {
                reason_insurg_year = null;
            }
        }
    
        private void Fixuplkp_Period22(lkp_Period2 previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile2.Contains(this))
            {
                previousValue.iom_ward_profile2.Remove(this);
            }
    
            if (lkp_Period22 != null)
            {
                if (!lkp_Period22.iom_ward_profile2.Contains(this))
                {
                    lkp_Period22.iom_ward_profile2.Add(this);
                }
                if (reason_clash_year != lkp_Period22.id)
                {
                    reason_clash_year = lkp_Period22.id;
                }
            }
            else if (!_settingFK)
            {
                reason_clash_year = null;
            }
        }
    
        private void Fixuplkp_Period23(lkp_Period2 previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile3.Contains(this))
            {
                previousValue.iom_ward_profile3.Remove(this);
            }
    
            if (lkp_Period23 != null)
            {
                if (!lkp_Period23.iom_ward_profile3.Contains(this))
                {
                    lkp_Period23.iom_ward_profile3.Add(this);
                }
                if (reason_disaster_year != lkp_Period23.id)
                {
                    reason_disaster_year = lkp_Period23.id;
                }
            }
            else if (!_settingFK)
            {
                reason_disaster_year = null;
            }
        }
    
        private void Fixuplkp_Period24(lkp_Period2 previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile4.Contains(this))
            {
                previousValue.iom_ward_profile4.Remove(this);
            }
    
            if (lkp_Period24 != null)
            {
                if (!lkp_Period24.iom_ward_profile4.Contains(this))
                {
                    lkp_Period24.iom_ward_profile4.Add(this);
                }
                if (reason_others_year != lkp_Period24.id)
                {
                    reason_others_year = lkp_Period24.id;
                }
            }
            else if (!_settingFK)
            {
                reason_others_year = null;
            }
        }
    
        private void Fixuplkp_Settlement(lkp_Settlement previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile.Contains(this))
            {
                previousValue.iom_ward_profile.Remove(this);
            }
    
            if (lkp_Settlement != null)
            {
                if (!lkp_Settlement.iom_ward_profile.Contains(this))
                {
                    lkp_Settlement.iom_ward_profile.Add(this);
                }
                if (settlement_type != lkp_Settlement.id)
                {
                    settlement_type = lkp_Settlement.id;
                }
            }
        }
    
        private void Fixuplkp_State(lkp_State previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile.Contains(this))
            {
                previousValue.iom_ward_profile.Remove(this);
            }
    
            if (lkp_State != null)
            {
                if (!lkp_State.iom_ward_profile.Contains(this))
                {
                    lkp_State.iom_ward_profile.Add(this);
                }
                if (nr_state1 != lkp_State.state_code)
                {
                    nr_state1 = lkp_State.state_code;
                }
            }
            else if (!_settingFK)
            {
                nr_state1 = null;
            }
        }
    
        private void Fixuplkp_State1(lkp_State previousValue)
        {
            if (previousValue != null && previousValue.iom_ward_profile1.Contains(this))
            {
                previousValue.iom_ward_profile1.Remove(this);
            }
    
            if (lkp_State1 != null)
            {
                if (!lkp_State1.iom_ward_profile1.Contains(this))
                {
                    lkp_State1.iom_ward_profile1.Add(this);
                }
                if (nr_state2 != lkp_State1.state_code)
                {
                    nr_state2 = lkp_State1.state_code;
                }
            }
            else if (!_settingFK)
            {
                nr_state2 = null;
            }
        }
    
        private void Fixupiom_b2f_informants(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_b2f_informants item in e.NewItems)
                {
                    item.iom_ward_profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_b2f_informants item in e.OldItems)
                {
                    if (ReferenceEquals(item.iom_ward_profile, this))
                    {
                        item.iom_ward_profile = null;
                    }
                }
            }
        }
    
        private void Fixupiom_b2f_organizations_assisting(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_b2f_organizations_assisting item in e.NewItems)
                {
                    item.iom_ward_profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_b2f_organizations_assisting item in e.OldItems)
                {
                    if (ReferenceEquals(item.iom_ward_profile, this))
                    {
                        item.iom_ward_profile = null;
                    }
                }
            }
        }
    
        private void Fixupiom_ward_households_breakdown(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_ward_households_breakdown item in e.NewItems)
                {
                    item.iom_ward_profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_ward_households_breakdown item in e.OldItems)
                {
                    if (ReferenceEquals(item.iom_ward_profile, this))
                    {
                        item.iom_ward_profile = null;
                    }
                }
            }
        }
    
        private void Fixupiom_ward_idp_arrival(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_ward_idp_arrival item in e.NewItems)
                {
                    item.iom_ward_profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_ward_idp_arrival item in e.OldItems)
                {
                    if (ReferenceEquals(item.iom_ward_profile, this))
                    {
                        item.iom_ward_profile = null;
                    }
                }
            }
        }
    
        private void Fixupiom_ward_presence_per_location(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_ward_presence_per_location item in e.NewItems)
                {
                    item.iom_ward_profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_ward_presence_per_location item in e.OldItems)
                {
                    if (ReferenceEquals(item.iom_ward_profile, this))
                    {
                        item.iom_ward_profile = null;
                    }
                }
            }
        }
    
        private void Fixupiom_group_assessment_1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (iom_group_assessment_1 item in e.NewItems)
                {
                    item.iom_ward_profile = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (iom_group_assessment_1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.iom_ward_profile, this))
                    {
                        item.iom_ward_profile = null;
                    }
                }
            }
        }

        #endregion

    }
}
