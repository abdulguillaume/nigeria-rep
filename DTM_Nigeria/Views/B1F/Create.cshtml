@model DTM_Nigeria.Models.B1F

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create B1F</h2>

@if (ViewBag.Exception != null)
{
    <p style="color: Red">@ViewBag.Exception</p>
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<link href="../../Content/jquery-ui.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>

<script src="~/Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-ui-1.10.4.custom.min.js" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {

//        $("#state").change(function () {
//            //alert($("#state").val());
//            if ($("#state").val() != "") {
//                $("#state").removeClass("input-validation-error");
//                $("#state-error").hide();
//            }
//        });

//        $("#forma").submit(function () {

//            if ($("#state").val() == "") {
//                $("#state").addClass("input-validation-error");
//                $("#state-error").show();
//            }

//         });

        $(".edit-date").datepicker();

        $("#researcher_researcher_name").autocomplete({
            source: '@Url.Action("GetResearchersNames")',
            focus: function (event, ui) {
                $("#researcher_researcher_name").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                //$("#researcher_researcher_tel").val("test");

                $.ajax({
                    url: "/B1F/GetResearcherTels",
                    type: 'POST',
                    data: { r_name: ui.item.label },
                    success: function (reseacher) {
                        var $telTxtBox = $('#researcher_researcher_tel');
                        $telTxtBox.empty();
                        $telTxtBox.val(reseacher.toString());
                    },
                    error: function (xhr) { alert("error!!"); }
                });

            }
        }
        );

        //$("#forma").on("load", function () {
        //alert("tst");
        //this.value = this.value.replace(/ /g, '');
    });




</script>



@using (
   // Html.BeginForm()
     Html.BeginForm("Create", "B1F", FormMethod.Post, new { id = "forma" })
    ) {
    
    @Html.ValidationSummary(true)

List<SelectListItem> yesNo = new List<SelectListItem>();

yesNo.Add(new SelectListItem { Text = "Yes", Value = "1" });
yesNo.Add(new SelectListItem { Text = "No", Value = "2" });
    
    
    <fieldset>
        <legend>Details about one B1F form</legend>

        <br />
        
        <table width=100%>
        <tr><th colspan=4>A. LOCATION AND TEAM MEMBERS</th></tr>


           <tr><td>Phase
           
           <div class="editor-field">
           @Html.DropDownListFor(model => model.profile.phase, (SelectList)ViewBag.Phase, "[Select phase]", new { disabled = "disabled" })
           @Html.ValidationMessageFor(model => model.profile.phase)
        </div>

           </td>
           
           <td>Date of assessment
           
           <div class="editor-field">
            @Html.TextBoxFor(model => model.profile.date, new { @class = "edit-date" })
            @Html.ValidationMessageFor(model => model.profile.date)
        </div>

           </td><td >Researcher name
           
        <div class="editor-field">
           @using(Html.BeginForm("Create", "B1F", FormMethod.Post, new { id = "search" })){
            @Html.EditorFor(model => model.researcher.researcher_name)
            @Html.ValidationMessageFor(model => model.researcher.researcher_name)
            }
        </div>
               

           </td><td >Researcher tel
           
        <div class="editor-field">
            @Html.EditorFor(model => model.researcher.researcher_tel)
            @Html.ValidationMessageFor(model => model.researcher.researcher_tel)
        </div>
               

           </td></tr>
           <tr><td>state
           
           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.state, (SelectList)ViewBag.StatesList, "[Select state]", new { @id = "state" })
            @Html.ValidationMessageFor(model => model.profile.state)
           </div>
           

           </td><td>LGA
           
           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.lga, (SelectList)ViewBag.LGA, "[Select Lga]")
            @Html.ValidationMessageFor(model => model.profile.lga)
           </div>

           </td><td>Settlement
           
           <div class="editor-field">
            @Html.EditorFor(model => model.profile.settlement)
            @Html.ValidationMessageFor(model => model.profile.settlement)
        </div>

           </td><td>Type
           

           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.settlement_type, (SelectList)ViewBag.Settlement, "[Select type]")
            @Html.ValidationMessageFor(model => model.profile.settlement_type)
        </div>


           </td></tr>
        </table>

        <br />
        
        <table width=100%>
        <tr><th colspan=4>B. DEMOGRAPHICS</th></tr>
           <tr><td colspan=2>Are there displaced IDP hh/individuals in the LGA?</td><td colspan=2>
           
           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.displaced_hh_ind_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.displaced_hh_ind_YesNo)
        </div>

           </td></tr>
           
           <tr><td colspan=4>If yes, what is the estimated number of current IDP population?</td></tr>
           <tr><td>Number of households</td><td>
           
             <div class="editor-field">
            @Html.EditorFor(model => model.profile.number_hh)
            @Html.ValidationMessageFor(model => model.profile.number_hh)
        </div>


           </td><td>Number of individuals</td><td>
           
                 <div class="editor-field">
            @Html.EditorFor(model => model.profile.number_ind)
            @Html.ValidationMessageFor(model => model.profile.number_ind)
        </div>

           </td></tr>
           <tr><td colspan=4>Arrival of IDPs in the LGA</td></tr>
            @*<tr><td>Before 2012
            
            
            </td><td>2012
            
            
            </td><td>2013
            
            
            </td><td>2014
            
            
            </td></tr>  *@

            <tr>
          
                      @{int i=0;}

            @foreach(var arrivals in Model.arrivals)
            {
                
                
                
            <td>
            <div class="display-field">
            @foreach(var p in (SelectList)ViewBag.Periods)
            {
                if (int.Parse(p.Value)==arrivals.year)
                {
                    @: @p.Text
                    break;
                }
            }</div>

            

        <div class="editor-label">
            #HH
        </div>
        <div class="editor-field">
             @Html.TextBoxFor(model => model.arrivals[i].year, new { @type = "hidden" })
            @Html.EditorFor(model => model.arrivals[i].hh)
            @Html.ValidationMessageFor(model => model.arrivals[i].hh)
        </div>

        <div class="editor-label">
            #IND
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.arrivals[i].ind)
            @Html.ValidationMessageFor(model => model.arrivals[i].ind)
        </div>


<div class="editor-label">
            From
        </div>

 <div class="editor-field">
           @*Html.EditorFor(model => model.arrivals[i].state_type)*@
            @Html.DropDownListFor(model => model.arrivals[i].state_type, (SelectList)ViewBag.LocationsList, "[1. Same state,  2. Other state]")
            @Html.ValidationMessageFor(model => model.arrivals[i].state_type)
        </div>


<div class="editor-label">
            Specify
        </div>
      
<div class="editor-field"> 
            @Html.DropDownListFor(model => model.arrivals[i].location, (SelectList)ViewBag.StatesList, "[Select state]")
            @Html.ValidationMessageFor(model => model.arrivals[i].location)
        </div>
            
            
            </td>
                
                i++;
                }
          
          </tr>


            <tr></tr>

        </table>

        
        <br />
        
        <table width=100%>
        <tr><th colspan=4>C. DISPLACEMENT THAT ORIGINANTES FROM THIS LGA</th></tr>
           <tr><td colspan=3>Are there households/individuals from this LGA that left as IDPs and have not returned?</td><td>
           
           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.nr_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.nr_YesNo)
        </div>
           
           </td></tr>
           <tr><td colspan=2>If yes, where did majority of them go?</td><td colspan=2>
           

           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.nr_location, (SelectList)ViewBag.LocationsList, "[1. Same state other LGA,  2. Other state]")
            @Html.ValidationMessageFor(model => model.profile.nr_location)
        </div>

           </td></tr>

           <tr><td colspan=2>List maximum 2 states -> </td><td>
           

           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.nr_state1, (SelectList)ViewBag.StatesList, "[Select state S1]")
            @Html.ValidationMessageFor(model => model.profile.nr_state1)
        </div>
        

           </td><td>
           
           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.nr_state2, (SelectList)ViewBag.StatesList, "[Select state S2]")
            @Html.ValidationMessageFor(model => model.profile.nr_state2)
        </div>

           </td></tr>

           <tr><td colspan=2>Select below for period when majority left:</td><td colspan=2>
           
           <div class="editor-field"> 
            @Html.DropDownListFor(model => model.profile.nr_period, (SelectList)ViewBag.Periods, "[Select period]")
            @Html.ValidationMessageFor(model => model.profile.nr_period)
        </div>
          

           </td></tr>
        </table>

        <br />
        
        <table width=100%>
        <tr><th colspan=4>D. IDP CATEGORY / REASON FOR DISPLACEMENT</th></tr>
           <tr><th>1. Insurgency-Conflict in North East</th><th>2. Community Clashes</th><th>3. Natural Disasters</th><th>
           Other, Specify

        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_others_name)
            @Html.ValidationMessageFor(model => model.profile.reason_others_name)
        </div>


           </th></tr>
           <tr><td>
           
            <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.reason_insurgency_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.reason_insurgency_YesNo)
        </div>

         <div class="editor-field"> 
            @Html.DropDownListFor(model => model.profile.reason_insurg_year, (SelectList)ViewBag.Period2, "[Select period]")
            @Html.ValidationMessageFor(model => model.profile.reason_insurg_year)
        </div>

        <div class="editor-label">
            #HH
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_insurg_hh)
            @Html.ValidationMessageFor(model => model.profile.reason_insurg_hh)
        </div>

        <div class="editor-label">
            #IND
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_insurg_ind)
            @Html.ValidationMessageFor(model => model.profile.reason_insurg_ind)
        </div>


           </td><td>
           

           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.reason_clash_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.reason_clash_YesNo)
        </div>

         <div class="editor-field"> 
            @Html.DropDownListFor(model => model.profile.reason_clash_year, (SelectList)ViewBag.Period2, "[Select period]")
            @Html.ValidationMessageFor(model => model.profile.reason_clash_year)
        </div>


        <div class="editor-label">
            #HH
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_clash_hh)
            @Html.ValidationMessageFor(model => model.profile.reason_clash_hh)
        </div>

        <div class="editor-label">
            #IND
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_clash_ind)
            @Html.ValidationMessageFor(model => model.profile.reason_clash_ind)
        </div>


           </td><td>
           

           <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.reason_disaster_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.reason_disaster_YesNo)
        </div>

         <div class="editor-field"> 
            @Html.DropDownListFor(model => model.profile.reason_disaster_year, (SelectList)ViewBag.Period2, "[Select period]")
            @Html.ValidationMessageFor(model => model.profile.reason_disaster_year)
        </div>


        <div class="editor-label">
            #HH
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_disaster_hh)
            @Html.ValidationMessageFor(model => model.profile.reason_disaster_hh)
        </div>

        <div class="editor-label">
            #IND
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_disaster_ind)
            @Html.ValidationMessageFor(model => model.profile.reason_disaster_ind)
        </div>


           </td><td>
           
            

            <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.reason_others_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.reason_others_YesNo)
        </div>

         <div class="editor-field"> 
            @Html.DropDownListFor(model => model.profile.reason_others_year, (SelectList)ViewBag.Period2, "[Select period]")
            @Html.ValidationMessageFor(model => model.profile.reason_others_year)
        </div>

        <div class="editor-label">
            #HH
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_others_hh)
            @Html.ValidationMessageFor(model => model.profile.reason_others_hh)
        </div>

        <div class="editor-label">
            #IND
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.profile.reason_others_ind)
            @Html.ValidationMessageFor(model => model.profile.reason_others_ind)
        </div>

           </td></tr>
        </table>


        <br />

        <table width=100%>
        <tr><th colspan=4>E. TYPE OF LOCATION/RESIDENCE FOR IDP POPULATION IN THE LGA</th></tr>
           <tr><th>Type of IDP's Temporary Settlements</th><th>IDPs</th><th>#HHs</th><th>
           #IND</th></tr>
           <tr><td>1. Camp like sites/centers</td><td>
           
            <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.temporary_settlement_type_camp_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.temporary_settlement_type_camp_YesNo)
        </div>

           </td><td>
           
             <div class="editor-field">
            @Html.EditorFor(model => model.profile.temporary_settlement_hh_camp)
            @Html.ValidationMessageFor(model => model.profile.temporary_settlement_hh_camp)
        </div>

           </td><td>
           
            <div class="editor-field">
            @Html.EditorFor(model => model.profile.temporary_settlement_ind_camp)
            @Html.ValidationMessageFor(model => model.profile.temporary_settlement_ind_camp)
        </div>
           
           </td></tr>

           <tr><td>2. Host family/Community accomodation</td><td>
           

             <div class="editor-field">
            @Html.DropDownListFor(model => model.profile.temporary_settlement_type_hc_YesNo, yesNo, "[Yes or No]")
            @Html.ValidationMessageFor(model => model.profile.temporary_settlement_type_hc_YesNo)
        </div>

           </td><td>
           
                   <div class="editor-field">
            @Html.EditorFor(model => model.profile.temporary_settlement_hh_hc)
            @Html.ValidationMessageFor(model => model.profile.temporary_settlement_hh_hc)
        </div>

           </td><td>
           
            <div class="editor-field">
            @Html.EditorFor(model => model.profile.temporary_settlement_ind_hc)
            @Html.ValidationMessageFor(model => model.profile.temporary_settlement_ind_hc)
        </div>

           </td></tr>

        </table>



        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
    }

<div>
    @Html.ActionLink("Back to B1F List", "Index")
</div>




<script type="text/javascript">
    $(function () {
        $("#state").change(function () {  

            if ($(this).val() != "NULL") {

                $.ajax({
                    url: "/B1F/getLgaList",
                    type: 'POST',
                    data: { id: $(this).val() },
                    success: function (lgas) {

                        var $select = $('#profile_lga');
                        $select.empty();
                        $select.append("<option value=''>[Select Lga]</option>");
                        $.each(lgas, function (i, lga) {
                            $select.append("<option value='" + lga.Value + "'>" + lga.Text + "</option>");
                        });
                    },
                    error: function (xhr) { alert("error!!"); }
                });
            }
        });
    });
</script>